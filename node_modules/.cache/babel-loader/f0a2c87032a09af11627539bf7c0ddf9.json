{"ast":null,"code":"import * as actionTypes from \"./constant\";\nimport axios from \"axios\";\nimport { TOKEN } from \"./newconstant\";\nexport const actGetMovieShowtimesApi = showTimesID => {\n  return dispatch => {\n    dispatch(actGetMovieShowTimesRequest());\n    axios({\n      url: `https://movie0706.cybersoft.edu.vn/api/QuanLyDatVe/LayDanhSachPhongVe?MaLichChieu=${showTimesID}`,\n      method: \"GET\"\n    }).then(result => {\n      dispatch(actGetMovieShowTimesSuccess(result.data));\n    }).catch(error => {\n      dispatch(actGetMovieShowTimesFailed(error));\n    });\n  };\n};\n\nconst actGetMovieShowTimesRequest = () => {\n  return {\n    type: actionTypes.GET_MOVIE_SHOWTIMES_REQUEST\n  };\n};\n\nconst actGetMovieShowTimesSuccess = showTimes => {\n  return {\n    type: actionTypes.GET_MOVIE_SHOWTIMES_SUCCESS,\n    payload: showTimes\n  };\n};\n\nconst actGetMovieShowTimesFailed = error => {\n  return {\n    type: actionTypes.GET_MOVIE_SHOWTIMES_FAILED,\n    payload: error\n  };\n};\n\nexport const actBookTicket = ticketInfo => {\n  return async dispatch => {\n    try {\n      const result = await axios({\n        url: \"https://movie0706.cybersoft.edu.vn/api/QuanLyDatVe/DatVe\",\n        method: \"POST\",\n        data: ticketInfo,\n        headers: {\n          Authorization: `Bearer ${JSON.parse(localStorage.getItem(\"currentUser\")).accessToken}`\n        }\n      });\n\n      if (result.status === 200) {// window.location.reload();\n      }\n    } catch (error) {\n      var _error$response;\n\n      console.log(localStorage.getItem(TOKEN));\n      console.log(\"error\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n    }\n  };\n};","map":{"version":3,"sources":["E:/Semester_6/Booking_App/booking/src/containers/HomeTemplate/Purchase/modules/action.js"],"names":["actionTypes","axios","TOKEN","actGetMovieShowtimesApi","showTimesID","dispatch","actGetMovieShowTimesRequest","url","method","then","result","actGetMovieShowTimesSuccess","data","catch","error","actGetMovieShowTimesFailed","type","GET_MOVIE_SHOWTIMES_REQUEST","showTimes","GET_MOVIE_SHOWTIMES_SUCCESS","payload","GET_MOVIE_SHOWTIMES_FAILED","actBookTicket","ticketInfo","headers","Authorization","JSON","parse","localStorage","getItem","accessToken","status","console","log","response"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAO,MAAMC,uBAAuB,GAAIC,WAAD,IAAiB;AACtD,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,2BAA2B,EAA5B,CAAR;AACAL,IAAAA,KAAK,CAAC;AACJM,MAAAA,GAAG,EAAG,qFAAoFH,WAAY,EADlG;AAEJI,MAAAA,MAAM,EAAE;AAFJ,KAAD,CAAL,CAIGC,IAJH,CAISC,MAAD,IAAY;AAChBL,MAAAA,QAAQ,CAACM,2BAA2B,CAACD,MAAM,CAACE,IAAR,CAA5B,CAAR;AACD,KANH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChBT,MAAAA,QAAQ,CAACU,0BAA0B,CAACD,KAAD,CAA3B,CAAR;AACD,KATH;AAUD,GAZD;AAaD,CAdM;;AAgBP,MAAMR,2BAA2B,GAAG,MAAM;AACxC,SAAO;AACLU,IAAAA,IAAI,EAAEhB,WAAW,CAACiB;AADb,GAAP;AAGD,CAJD;;AAMA,MAAMN,2BAA2B,GAAIO,SAAD,IAAe;AACjD,SAAO;AACLF,IAAAA,IAAI,EAAEhB,WAAW,CAACmB,2BADb;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALD;;AAMA,MAAMH,0BAA0B,GAAID,KAAD,IAAW;AAC5C,SAAO;AACLE,IAAAA,IAAI,EAAEhB,WAAW,CAACqB,0BADb;AAELD,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALD;;AAMA,OAAO,MAAMQ,aAAa,GAAIC,UAAD,IAAgB;AAC3C,SAAO,MAAOlB,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMK,MAAM,GAAG,MAAMT,KAAK,CAAC;AACzBM,QAAAA,GAAG,EAAE,0DADoB;AAEzBC,QAAAA,MAAM,EAAE,MAFiB;AAGzBI,QAAAA,IAAI,EAAEW,UAHmB;AAIzBC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UACdC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,EAAgDC,WACjD;AAHM;AAJgB,OAAD,CAA1B;;AAWA,UAAIpB,MAAM,CAACqB,MAAP,KAAkB,GAAtB,EAA2B,CACzB;AACD;AACF,KAfD,CAeE,OAAOjB,KAAP,EAAc;AAAA;;AACdkB,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAY,CAACC,OAAb,CAAqB3B,KAArB,CAAZ;AACA8B,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,qBAAqBnB,KAAK,CAACoB,QAA3B,oDAAqB,gBAAgBtB,IAArC;AACD;AACF,GApBD;AAqBD,CAtBM","sourcesContent":["import * as actionTypes from \"./constant\";\r\nimport axios from \"axios\";\r\nimport { TOKEN } from \"./newconstant\";\r\nexport const actGetMovieShowtimesApi = (showTimesID) => {\r\n  return (dispatch) => {\r\n    dispatch(actGetMovieShowTimesRequest());\r\n    axios({\r\n      url: `https://movie0706.cybersoft.edu.vn/api/QuanLyDatVe/LayDanhSachPhongVe?MaLichChieu=${showTimesID}`,\r\n      method: \"GET\",\r\n    })\r\n      .then((result) => {\r\n        dispatch(actGetMovieShowTimesSuccess(result.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(actGetMovieShowTimesFailed(error));\r\n      });\r\n  };\r\n};\r\n\r\nconst actGetMovieShowTimesRequest = () => {\r\n  return {\r\n    type: actionTypes.GET_MOVIE_SHOWTIMES_REQUEST,\r\n  };\r\n};\r\n\r\nconst actGetMovieShowTimesSuccess = (showTimes) => {\r\n  return {\r\n    type: actionTypes.GET_MOVIE_SHOWTIMES_SUCCESS,\r\n    payload: showTimes,\r\n  };\r\n};\r\nconst actGetMovieShowTimesFailed = (error) => {\r\n  return {\r\n    type: actionTypes.GET_MOVIE_SHOWTIMES_FAILED,\r\n    payload: error,\r\n  };\r\n};\r\nexport const actBookTicket = (ticketInfo) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const result = await axios({\r\n        url: \"https://movie0706.cybersoft.edu.vn/api/QuanLyDatVe/DatVe\",\r\n        method: \"POST\",\r\n        data: ticketInfo,\r\n        headers: {\r\n          Authorization: `Bearer ${\r\n            JSON.parse(localStorage.getItem(\"currentUser\")).accessToken\r\n          }`,\r\n        },\r\n      });\r\n\r\n      if (result.status === 200) {\r\n        // window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      console.log(localStorage.getItem(TOKEN));\r\n      console.log(\"error\", error.response?.data);\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}