{"ast":null,"code":"import * as actionTypes from \"./constant\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nexport const actSignInApi = (userAccount, history) => {\n  return dispatch => {\n    dispatch(actSignInRequest);\n    axios({\n      url: `http://localhost:5000/api/v1/auth/login`,\n      method: \"POST\",\n      data: userAccount\n    }).then(result => {\n      localStorage.setItem(\"User\", JSON.stringify(res.data));\n      dispatch(actSignInSuccess(result.data));\n      Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: \"Login Successful\",\n        showConfirmButton: false,\n        timer: 1500\n      }).then(result => {\n        history.replace(\"/\");\n      });\n    }).catch(error => {\n      dispatch(actSignInFailed(error));\n    });\n  };\n};\n\nconst actSignInRequest = () => {\n  return {\n    type: actionTypes.SIGN_IN_REQUEST\n  };\n};\n\nconst actSignInSuccess = userAccount => {\n  return {\n    type: actionTypes.SIGN_IN_SUCCESS,\n    payload: userAccount\n  };\n};\n\nconst actSignInFailed = error => {\n  return {\n    type: actionTypes.SIGN_IN_FAILED,\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/Semester_6/Booking_App/booking/src/containers/AdminTemplate/SignIn/modules/action.js"],"names":["actionTypes","axios","Swal","actSignInApi","userAccount","history","dispatch","actSignInRequest","url","method","data","then","result","localStorage","setItem","JSON","stringify","res","actSignInSuccess","fire","position","icon","title","showConfirmButton","timer","replace","catch","error","actSignInFailed","type","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","payload","SIGN_IN_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,WAAD,EAAcC,OAAd,KAA0B;AACpD,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,gBAAD,CAAR;AACAN,IAAAA,KAAK,CAAC;AACJO,MAAAA,GAAG,EAAG,yCADF;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAEN;AAHF,KAAD,CAAL,CAKGO,IALH,CAKSC,MAAD,IAAY;AAChBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeC,GAAG,CAACP,IAAnB,CAA7B;AAEAJ,MAAAA,QAAQ,CAACY,gBAAgB,CAACN,MAAM,CAACF,IAAR,CAAjB,CAAR;AAEAR,MAAAA,IAAI,CAACiB,IAAL,CAAU;AACRC,QAAAA,QAAQ,EAAE,QADF;AAERC,QAAAA,IAAI,EAAE,SAFE;AAGRC,QAAAA,KAAK,EAAE,kBAHC;AAIRC,QAAAA,iBAAiB,EAAE,KAJX;AAKRC,QAAAA,KAAK,EAAE;AALC,OAAV,EAMGb,IANH,CAMSC,MAAD,IAAY;AAClBP,QAAAA,OAAO,CAACoB,OAAR,CAAgB,GAAhB;AACD,OARD;AASD,KAnBH,EAoBGC,KApBH,CAoBUC,KAAD,IAAW;AAChBrB,MAAAA,QAAQ,CAACsB,eAAe,CAACD,KAAD,CAAhB,CAAR;AACD,KAtBH;AAuBD,GAzBD;AA0BD,CA3BM;;AA6BP,MAAMpB,gBAAgB,GAAG,MAAM;AAC7B,SAAO;AACLsB,IAAAA,IAAI,EAAE7B,WAAW,CAAC8B;AADb,GAAP;AAGD,CAJD;;AAMA,MAAMZ,gBAAgB,GAAId,WAAD,IAAiB;AACxC,SAAO;AACLyB,IAAAA,IAAI,EAAE7B,WAAW,CAAC+B,eADb;AAELC,IAAAA,OAAO,EAAE5B;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMwB,eAAe,GAAID,KAAD,IAAW;AACjC,SAAO;AACLE,IAAAA,IAAI,EAAE7B,WAAW,CAACiC,cADb;AAELD,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALD","sourcesContent":["import * as actionTypes from \"./constant\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const actSignInApi = (userAccount, history) => {\r\n  return (dispatch) => {\r\n    dispatch(actSignInRequest);\r\n    axios({\r\n      url: `http://localhost:5000/api/v1/auth/login`,\r\n      method: \"POST\",\r\n      data: userAccount,\r\n    })\r\n      .then((result) => {\r\n        localStorage.setItem(\"User\", JSON.stringify(res.data));\r\n\r\n        dispatch(actSignInSuccess(result.data));\r\n\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Login Successful\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then((result) => {\r\n          history.replace(\"/\");\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch(actSignInFailed(error));\r\n      });\r\n  };\r\n};\r\n\r\nconst actSignInRequest = () => {\r\n  return {\r\n    type: actionTypes.SIGN_IN_REQUEST,\r\n  };\r\n};\r\n\r\nconst actSignInSuccess = (userAccount) => {\r\n  return {\r\n    type: actionTypes.SIGN_IN_SUCCESS,\r\n    payload: userAccount,\r\n  };\r\n};\r\n\r\nconst actSignInFailed = (error) => {\r\n  return {\r\n    type: actionTypes.SIGN_IN_FAILED,\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}