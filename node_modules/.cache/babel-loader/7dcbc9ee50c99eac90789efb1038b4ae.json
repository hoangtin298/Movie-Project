{"ast":null,"code":"import * as actionTypes from \"./constant\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\nexport const actSignInApi = userAccount => {\n  return dispatch => {\n    dispatch(actSignInRequest);\n    axios({\n      url: `http://localhost:5000/api/v1/auth/login`,\n      method: \"POST\",\n      data: userAccount\n    }).then(result => {\n      var _s = $RefreshSig$();\n\n      dispatch(actSignInSuccess(result.data));\n      Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: \"Login Successful\",\n        showConfirmButton: false,\n        timer: 1500\n      }).then(_s(result => {\n        _s();\n\n        const history = useHistory();\n      }, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n        return [useHistory];\n      }));\n    }).catch(error => {\n      dispatch(actSignInFailed(error));\n    });\n  };\n};\n\nconst actSignInRequest = () => {\n  return {\n    type: actionTypes.SIGN_IN_REQUEST\n  };\n};\n\nconst actSignInSuccess = userAccount => {\n  return {\n    type: actionTypes.SIGN_IN_SUCCESS,\n    payload: userAccount\n  };\n};\n\nconst actSignInFailed = error => {\n  return {\n    type: actionTypes.SIGN_IN_FAILED,\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/Semester_6/Booking_App/booking/src/containers/AdminTemplate/SignIn/modules/action.js"],"names":["actionTypes","axios","Swal","useHistory","actSignInApi","userAccount","dispatch","actSignInRequest","url","method","data","then","result","actSignInSuccess","fire","position","icon","title","showConfirmButton","timer","history","catch","error","actSignInFailed","type","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","payload","SIGN_IN_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,MAAMC,YAAY,GAAIC,WAAD,IAAiB;AAC3C,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,gBAAD,CAAR;AACAN,IAAAA,KAAK,CAAC;AACJO,MAAAA,GAAG,EAAG,yCADF;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAEL;AAHF,KAAD,CAAL,CAKGM,IALH,CAKSC,MAAD,IAAY;AAAA;;AAChBN,MAAAA,QAAQ,CAACO,gBAAgB,CAACD,MAAM,CAACF,IAAR,CAAjB,CAAR;AACAR,MAAAA,IAAI,CAACY,IAAL,CAAU;AACRC,QAAAA,QAAQ,EAAE,QADF;AAERC,QAAAA,IAAI,EAAE,SAFE;AAGRC,QAAAA,KAAK,EAAE,kBAHC;AAIRC,QAAAA,iBAAiB,EAAE,KAJX;AAKRC,QAAAA,KAAK,EAAE;AALC,OAAV,EAMGR,IANH,IAMSC,MAAD,IAAY;AAAA;;AAClB,cAAMQ,OAAO,GAAGjB,UAAU,EAA1B;AACD,OARD;AAAA,gBAOkBA,UAPlB;AAAA;AASD,KAhBH,EAiBGkB,KAjBH,CAiBUC,KAAD,IAAW;AAChBhB,MAAAA,QAAQ,CAACiB,eAAe,CAACD,KAAD,CAAhB,CAAR;AACD,KAnBH;AAoBD,GAtBD;AAuBD,CAxBM;;AA0BP,MAAMf,gBAAgB,GAAG,MAAM;AAC7B,SAAO;AACLiB,IAAAA,IAAI,EAAExB,WAAW,CAACyB;AADb,GAAP;AAGD,CAJD;;AAMA,MAAMZ,gBAAgB,GAAIR,WAAD,IAAiB;AACxC,SAAO;AACLmB,IAAAA,IAAI,EAAExB,WAAW,CAAC0B,eADb;AAELC,IAAAA,OAAO,EAAEtB;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMkB,eAAe,GAAID,KAAD,IAAW;AACjC,SAAO;AACLE,IAAAA,IAAI,EAAExB,WAAW,CAAC4B,cADb;AAELD,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALD","sourcesContent":["import * as actionTypes from \"./constant\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport const actSignInApi = (userAccount) => {\r\n  return (dispatch) => {\r\n    dispatch(actSignInRequest);\r\n    axios({\r\n      url: `http://localhost:5000/api/v1/auth/login`,\r\n      method: \"POST\",\r\n      data: userAccount,\r\n    })\r\n      .then((result) => {\r\n        dispatch(actSignInSuccess(result.data));\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Login Successful\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then((result) => {\r\n          const history = useHistory();\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        dispatch(actSignInFailed(error));\r\n      });\r\n  };\r\n};\r\n\r\nconst actSignInRequest = () => {\r\n  return {\r\n    type: actionTypes.SIGN_IN_REQUEST,\r\n  };\r\n};\r\n\r\nconst actSignInSuccess = (userAccount) => {\r\n  return {\r\n    type: actionTypes.SIGN_IN_SUCCESS,\r\n    payload: userAccount,\r\n  };\r\n};\r\n\r\nconst actSignInFailed = (error) => {\r\n  return {\r\n    type: actionTypes.SIGN_IN_FAILED,\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}