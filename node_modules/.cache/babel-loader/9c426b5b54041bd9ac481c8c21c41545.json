{"ast":null,"code":"import * as actionTypes from \"./constant\";\nimport axios from \"axios\";\nexport const actAddUserApi = user => {\n  let token = \"\";\n\n  if (localStorage.getItem(\"currentUser\")) {\n    token = JSON.parse(localStorage.getItem(\"currentUser\")).accessToken;\n  }\n\n  return dispatch => {\n    dispatch(actAddUserRequest());\n    axios({\n      url: `https://movie0706.cybersoft.edu.vn/api/QuanLyNguoiDung/ThemNguoiDung`,\n      method: \"POST\",\n      data: user,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(result => {\n      dispatch(actAddUserSuccess(result.data));\n    }).catch(error => {\n      dispatch(actAddUserFailed(error));\n    });\n  };\n};\nexport const actUpdateUserApi = user => {\n  let token = \"\";\n\n  if (localStorage.getItem(\"currentUser\")) {\n    token = JSON.parse(localStorage.getItem(\"currentUser\")).accessToken;\n  }\n\n  return dispatch => {\n    dispatch(actUpdateUserRequest());\n    axios({\n      url: `https://movie0706.cybersoft.edu.vn/api/QuanLyNguoiDung/CapNhatThongTinNguoiDung`,\n      method: \"PUT\",\n      data: user,\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(result => {\n      dispatch(actUpdateUserSuccess(result.data));\n    }).catch(error => {\n      dispatch(actAddUserFailed(error));\n    });\n  };\n}; // Add\n\nconst actAddUserRequest = () => {\n  return {\n    type: actionTypes.ADD_USER_REQUEST\n  };\n};\n\nconst actAddUserSuccess = user => {\n  return {\n    type: actionTypes.ADD_USER_SUCCESS,\n    payload: user\n  };\n};\n\nconst actAddUserFailed = error => {\n  return {\n    type: actionTypes.ADD_USER_FAILED,\n    payload: error\n  };\n}; // Update\n\n\nconst actUpdateUserRequest = () => {\n  return {\n    type: actionTypes.UPDATE_USER_REQUEST\n  };\n};\n\nconst actUpdateUserSuccess = user => {\n  return {\n    type: actionTypes.UPDATE_USER_SUCCESS,\n    payload: user\n  };\n};\n\nconst actUpdateUserFailed = error => {\n  return {\n    type: actionTypes.UPDATE_USER_FAILED,\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/Semester_6/Booking_App/booking/src/containers/AdminTemplate/ManageUser/ManageDialog/modules/action.js"],"names":["actionTypes","axios","actAddUserApi","user","token","localStorage","getItem","JSON","parse","accessToken","dispatch","actAddUserRequest","url","method","data","headers","Authorization","then","result","actAddUserSuccess","catch","error","actAddUserFailed","actUpdateUserApi","actUpdateUserRequest","actUpdateUserSuccess","type","ADD_USER_REQUEST","ADD_USER_SUCCESS","payload","ADD_USER_FAILED","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","actUpdateUserFailed","UPDATE_USER_FAILED"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./constant\";\r\nimport axios from \"axios\";\r\n\r\nexport const actAddUserApi = (user) => {\r\n  let token = \"\";\r\n  if (localStorage.getItem(\"currentUser\")) {\r\n    token = JSON.parse(localStorage.getItem(\"currentUser\")).accessToken;\r\n  }\r\n  return (dispatch) => {\r\n    dispatch(actAddUserRequest());\r\n    axios({\r\n      url: `https://movie0706.cybersoft.edu.vn/api/QuanLyNguoiDung/ThemNguoiDung`,\r\n      method: \"POST\",\r\n      data: user,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((result) => {\r\n        dispatch(actAddUserSuccess(result.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(actAddUserFailed(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const actUpdateUserApi = (user) => {\r\n  let token = \"\";\r\n  if (localStorage.getItem(\"currentUser\")) {\r\n    token = JSON.parse(localStorage.getItem(\"currentUser\")).accessToken;\r\n  }\r\n  return (dispatch) => {\r\n    dispatch(actUpdateUserRequest());\r\n    axios({\r\n      url: `https://movie0706.cybersoft.edu.vn/api/QuanLyNguoiDung/CapNhatThongTinNguoiDung`,\r\n      method: \"PUT\",\r\n      data: user,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((result) => {\r\n        dispatch(actUpdateUserSuccess(result.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(actAddUserFailed(error));\r\n      });\r\n  };\r\n};\r\n\r\n// Add\r\nconst actAddUserRequest = () => {\r\n  return {\r\n    type: actionTypes.ADD_USER_REQUEST,\r\n  };\r\n};\r\n\r\nconst actAddUserSuccess = (user) => {\r\n  return {\r\n    type: actionTypes.ADD_USER_SUCCESS,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nconst actAddUserFailed = (error) => {\r\n  return {\r\n    type: actionTypes.ADD_USER_FAILED,\r\n    payload: error,\r\n  };\r\n};\r\n\r\n// Update\r\nconst actUpdateUserRequest = () => {\r\n  return {\r\n    type: actionTypes.UPDATE_USER_REQUEST,\r\n  };\r\n};\r\n\r\nconst actUpdateUserSuccess = (user) => {\r\n  return {\r\n    type: actionTypes.UPDATE_USER_SUCCESS,\r\n    payload: user,\r\n  };\r\n};\r\n\r\nconst actUpdateUserFailed = (error) => {\r\n  return {\r\n    type: actionTypes.UPDATE_USER_FAILED,\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}