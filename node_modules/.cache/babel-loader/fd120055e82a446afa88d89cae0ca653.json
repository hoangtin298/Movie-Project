{"ast":null,"code":"var _jsxFileName = \"E:\\\\Semester_6\\\\Booking_App\\\\booking\\\\src\\\\components\\\\MovieList\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Grid } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MovieSingle from \"../MovieSingle\";\nimport { actGetMovieListApi } from \"./modules/action\";\nimport Spinner from \"react-spinner-material\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Carousel from \"react-material-ui-carousel\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport theme from \"../../theme\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(8)\n  },\n  carousel: {\n    position: \"relative\"\n  },\n  movieGroup: {\n    height: \"896px\"\n  },\n  navButton: {\n    fontSize: \"50px\",\n    color: theme.palette.grey[500]\n  }\n}));\n\nconst chunkArray = (arr, size) => Array.from({\n  length: Math.ceil(arr.length / size)\n}, (v, i) => arr.slice(i * size, i * size + size));\n\nconst renderLoading = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"80vh\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      borderColor: \"#0ff\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Spinner, {\n      size: 120,\n      spinnerColor: \"#00f\",\n      spinnerWidth: 1,\n      visible: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\nfunction MovieList(props) {\n  _s();\n\n  const movieList = useSelector(state => state.movieListReducer);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    dispatch(actGetMovieListApi());\n  }, []);\n\n  const renderMovieGroup = movieGroup => {\n    return movieGroup.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: renderMovieList(item)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  const renderMovieList = movieList => {\n    return movieList.map(item => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(MovieSingle, {\n          data: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, item.maPhim, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [movieList.loading ? renderLoading() : null, /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Carousel, {\n        className: classes.carousel,\n        animation: \"slide\",\n        autoPlay: false,\n        navButtonsAlwaysVisible: true,\n        NextIcon: /*#__PURE__*/_jsxDEV(NavigateNextIcon, {\n          className: classes.navButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this),\n        PrevIcon: /*#__PURE__*/_jsxDEV(NavigateBeforeIcon, {\n          className: classes.navButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this),\n        navButtonsProps: {\n          style: {\n            backgroundColor: \"transparent\"\n          }\n        },\n        indicatorIconButtonProps: {\n          style: {\n            padding: \"4px\"\n          }\n        },\n        IndicatorIcon: /*#__PURE__*/_jsxDEV(FiberManualRecordIcon, {\n          style: {\n            fontSize: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 26\n        }, this),\n        activeIndicatorIconButtonProps: {\n          style: {\n            color: theme.palette.primary.main\n          }\n        },\n        indicatorContainerProps: {},\n        children: movieList.data ? renderMovieGroup(chunkArray(movieList.data, 8)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieList, \"CQMUefNFAYsilUwrJ63eAVAosCM=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["E:/Semester_6/Booking_App/booking/src/components/MovieList/index.js"],"names":["Container","Grid","React","useEffect","useState","useSelector","useDispatch","MovieSingle","actGetMovieListApi","Spinner","makeStyles","Typography","Carousel","FiberManualRecordIcon","ArrowBackIosIcon","ArrowForwardIosIcon","theme","NavigateNextIcon","NavigateBeforeIcon","useStyles","root","paddingTop","spacing","carousel","position","movieGroup","height","navButton","fontSize","color","palette","grey","chunkArray","arr","size","Array","from","length","Math","ceil","v","i","slice","renderLoading","display","alignItems","justifyContent","borderColor","MovieList","props","movieList","state","movieListReducer","dispatch","classes","renderMovieGroup","map","item","index","renderMovieList","maPhim","loading","style","backgroundColor","padding","primary","main","data"],"mappings":"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","sourcesContent":["import { Container, Grid } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport MovieSingle from \"../MovieSingle\";\r\nimport { actGetMovieListApi } from \"./modules/action\";\r\nimport Spinner from \"react-spinner-material\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport theme from \"../../theme\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(8),\r\n  },\r\n  carousel: {\r\n    position: \"relative\",\r\n  },\r\n  movieGroup: {\r\n    height: \"896px\",\r\n  },\r\n  navButton: {\r\n    fontSize: \"50px\",\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\n\r\nconst chunkArray = (arr, size) =>\r\n  Array.from({ length: Math.ceil(arr.length / size) }, (v, i) =>\r\n    arr.slice(i * size, i * size + size)\r\n  );\r\n\r\nconst renderLoading = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"80vh\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderColor: \"#0ff\",\r\n      }}\r\n    >\r\n      <Spinner\r\n        size={120}\r\n        spinnerColor={\"#00f\"}\r\n        spinnerWidth={1}\r\n        visible={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction MovieList(props) {\r\n  const movieList = useSelector((state) => state.movieListReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(actGetMovieListApi());\r\n  }, []);\r\n\r\n  const renderMovieGroup = (movieGroup) => {\r\n    return movieGroup.map((item, index) => {\r\n      return (\r\n        <Grid key={index} container spacing={3}>\r\n          {renderMovieList(item)}\r\n        </Grid>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderMovieList = (movieList) => {\r\n    return movieList.map((item) => {\r\n      return (\r\n        <Grid key={item.maPhim} item={true} xs={3}>\r\n          <MovieSingle data={item} />\r\n        </Grid>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {movieList.loading ? renderLoading() : null}\r\n\r\n      <Container maxWidth=\"md\">\r\n        <Carousel\r\n          className={classes.carousel}\r\n          animation=\"slide\"\r\n          autoPlay={false}\r\n          navButtonsAlwaysVisible={true}\r\n          NextIcon={<NavigateNextIcon className={classes.navButton} />}\r\n          PrevIcon={<NavigateBeforeIcon className={classes.navButton} />}\r\n          navButtonsProps={{\r\n            style: {\r\n              backgroundColor: \"transparent\",\r\n            },\r\n          }}\r\n          indicatorIconButtonProps={{\r\n            style: {\r\n              padding: \"4px\",\r\n            },\r\n          }}\r\n          IndicatorIcon={<FiberManualRecordIcon style={{ fontSize: \"20px\" }} />}\r\n          activeIndicatorIconButtonProps={{\r\n            style: {\r\n              color: theme.palette.primary.main,\r\n            },\r\n          }}\r\n          indicatorContainerProps={{}}\r\n        >\r\n          {movieList.data\r\n            ? renderMovieGroup(chunkArray(movieList.data, 8))\r\n            : null}\r\n        </Carousel>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n"]},"metadata":{},"sourceType":"module"}