{"version":3,"file":"vest.modern.js","sources":["../src/vest.ts"],"sourcesContent":["import { FieldValues, Resolver, transformToNestObject } from 'react-hook-form';\nimport * as Vest from 'vest';\n\ntype VestErrors = Record<string, string[]>;\n\ntype ICreateResult = ReturnType<typeof Vest.create>;\n\ntype Promisify = <T extends ICreateResult, K>(\n  fn: T,\n) => (args: K) => Promise<Vest.IVestResult>;\n\nconst promisify: Promisify = (validatorFn) => (...args) =>\n  new Promise((resolve) => validatorFn(...args).done(resolve as Vest.DoneCB));\n\nconst parseErrorSchema = (\n  vestError: VestErrors,\n  validateAllFieldCriteria: boolean,\n) => {\n  return Object.entries(vestError).reduce((prev, [key, value]) => {\n    return {\n      ...prev,\n      [key]: {\n        type: '',\n        message: value[0],\n        ...(validateAllFieldCriteria\n          ? {\n              types: value.reduce((prev, message, index) => {\n                return {\n                  ...prev,\n                  [index]: message,\n                };\n              }, {}),\n            }\n          : {}),\n      },\n    };\n  }, {});\n};\n\nexport const vestResolver = <TFieldValues extends FieldValues>(\n  schema: ICreateResult,\n  _: any = {},\n  validateAllFieldCriteria = false,\n): Resolver<TFieldValues> => async (values) => {\n  const validateSchema = promisify(schema);\n  const result = await validateSchema(values);\n  const errors = result.getErrors();\n\n  if (!result.hasErrors()) {\n    return { values: values as any, errors: {} };\n  }\n\n  return {\n    values: {},\n    errors: transformToNestObject(\n      parseErrorSchema(errors, validateAllFieldCriteria),\n    ),\n  };\n};\n"],"names":["parseErrorSchema","vestError","validateAllFieldCriteria","Object","entries","reduce","prev","key","value","[object Object]","type","message","types","index","vestResolver","schema","_","async","validateSchema","validatorFn","args","Promise","resolve","done","result","values","errors","getErrors","hasErrors","transformToNestObject"],"mappings":"uQAWA,MAGMA,EAAmB,CACvBC,EACAC,IAEOC,OAAOC,QAAQH,GAAWI,OAAO,CAACC,GAAOC,EAAKC,UAE9CF,GACHG,CAACF,MACCG,KAAM,GACNC,QAASH,EAAM,IACXN,EACA,CACEU,MAAOJ,EAAMH,OAAO,CAACC,EAAMK,EAASE,SAE7BP,GACHG,CAACI,GAAQF,IAEV,KAEL,MAGP,IAGQG,EAAe,CAC1BC,EACAC,EAAS,GACTd,GAA2B,IACAe,MAAAA,IAC3B,MAAMC,GAjCsBC,EAiCKJ,EAjCW,IAAIK,IAChD,IAAIC,QAASC,GAAYH,KAAeC,GAAMG,KAAKD,KADvBH,IAAAA,EAkC5B,MAAMK,QAAeN,EAAeO,GAC9BC,EAASF,EAAOG,YAEtB,OAAKH,EAAOI,YAIL,CACLH,OAAQ,GACRC,OAAQG,EACN7B,EAAiB0B,EAAQxB,KANpB,CAAEuB,OAAQA,EAAeC,OAAQ"}