import{transformToNestObject as e}from"react-hook-form";function t(){return(t=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}const r=(r,n={abortEarly:!1})=>async(o,s,a=!1)=>{try{return n.context&&"development"===process.env.NODE_ENV&&console.warn("You should not used the yup options context. Please, use the 'useForm' context object instead"),{values:await r.validate(o,t({},n,{context:s})),errors:{}}}catch(r){const n=((e,r)=>Array.isArray(e.inner)&&e.inner.length?e.inner.reduce((e,{path:n,message:o,type:s})=>{const a=e[n]&&e[n].types||{},c=n||s;return t({},e,c?{[c]:t({},e[c]||{message:o,type:s},r?{types:t({},a,{[s]:a[s]?[...[].concat(a[s]),o]:o})}:{})}:{})},{}):{[e.path]:{message:e.message,type:e.type}})(r,a);return{values:{},errors:e(n)}}};export{r as yupResolver};
//# sourceMappingURL=yup.modern.js.map
