!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("react-hook-form"),require("@hookform/resolvers")):"function"==typeof define&&define.amd?define(["exports","react-hook-form","@hookform/resolvers"],e):e((r||self).hookformResolversZod={},r.reactHookForm,r.hookformResolvers)}(this,function(r,e,o){function t(){return(t=Object.assign||function(r){for(var e=1;e<arguments.length;e++){var o=arguments[e];for(var t in o)Object.prototype.hasOwnProperty.call(o,t)&&(r[t]=o[t])}return r}).apply(this,arguments)}function n(r,e){(null==e||e>r.length)&&(e=r.length);for(var o=0,t=new Array(e);o<e;o++)t[o]=r[o];return t}function a(r,e){var o;if("undefined"==typeof Symbol||null==r[Symbol.iterator]){if(Array.isArray(r)||(o=function(r,e){if(r){if("string"==typeof r)return n(r,e);var o=Object.prototype.toString.call(r).slice(8,-1);return"Object"===o&&r.constructor&&(o=r.constructor.name),"Map"===o||"Set"===o?Array.from(r):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?n(r,e):void 0}}(r))||e&&r&&"number"==typeof r.length){o&&(r=o);var t=0;return function(){return t>=r.length?{done:!0}:{done:!1,value:r[t++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}return(o=r[Symbol.iterator]()).next.bind(o)}var s=function(r,n){if(r.isEmpty)return{};for(var s,i=[].concat(r.errors),u={},f=a(i);!(s=f()).done;){var l,c,p,m=s.value,v=m.path,y=m.message,d=m.code,h=o.convertArrayToPathName(v);if("unionErrors"in m)for(var b,g=a(m.unionErrors.map(function(r){return r.errors}));!(b=g()).done;)i.push.apply(i,b.value);u=t({},u,v?u[h]&&n?((l={})[h]=e.appendErrors(h,n,u,d,y),l):((p={})[h]=u[h]||t({message:y,type:d},n?{types:(c={},c[d]=y||!0,c)}:{}),p):{})}return u};r.zodResolver=function(r,o){return function(t,n,a){void 0===a&&(a=!1);try{var i=r.safeParse(t,o);return Promise.resolve(i.success?{values:i.data,errors:{}}:{values:{},errors:e.transformToNestObject(s(i.error,a))})}catch(r){return Promise.reject(r)}}}});
//# sourceMappingURL=zod.umd.js.map
