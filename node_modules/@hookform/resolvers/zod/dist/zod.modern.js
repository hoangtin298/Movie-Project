import{transformToNestObject as r,appendErrors as o}from"react-hook-form";import{convertArrayToPathName as s}from"@hookform/resolvers";function e(){return(e=Object.assign||function(r){for(var o=1;o<arguments.length;o++){var s=arguments[o];for(var e in s)Object.prototype.hasOwnProperty.call(s,e)&&(r[e]=s[e])}return r}).apply(this,arguments)}const t=(r,t)=>{if(r.isEmpty)return{};const n=[...r.errors];let a={};for(const r of n){const{path:c,message:f,code:p}=r,i=s(c);if("unionErrors"in r)for(const o of r.unionErrors.map(r=>r.errors))n.push(...o);a=e({},a,c?a[i]&&t?{[i]:o(i,t,a,p,f)}:{[i]:a[i]||e({message:f,type:p},t?{types:{[p]:f||!0}}:{})}:{})}return a},n=(o,s)=>async(e,n,a=!1)=>{const c=o.safeParse(e,s);return c.success?{values:c.data,errors:{}}:{values:{},errors:r(t(c.error,a))}};export{n as zodResolver};
//# sourceMappingURL=zod.modern.js.map
